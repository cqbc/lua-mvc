#使用指定的用户运行nginx
#user nobody

worker_processes 8;
worker_rlimit_nofile 65536;

events {
    use epoll;
    worker_connections  65536;
      # multi_accept on;
}

http {
    ##
    # Basic Settings
    ##
    include mime.types;
    default_type application/octet-stream;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 128;
    types_hash_max_size 2048;
    server_tokens off;

    ssi on;
    ssi_silent_errors on;
    fastcgi_intercept_errors on;
    port_in_redirect off;

    # server_names_hash_bucket_size 64;
    # server_name_in_redirect off;

    ##
    # Logging Settings
    ##
    log_format main
        '$remote_addr - $remote_user [$time_local] $request_time '
        '"$request_method $scheme://$host$request_uri" '
        '$status $body_bytes_sent '
        '"$http_referer" "$http_user_agent" '
        '$request_time $upstream_response_time '
        '$upstream_addr $upstream_status '
        '$http_x_forwarded_for "$request_body" $request';

    #limit_req_zone $http_x_forwarded_for zone = one:10m rate=1r/s;

    # Gzip Settings
    gzip on;
    gzip_disable "msie6";
    gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript application/json;

    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Real-IP $http_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header   Connection "";
    proxy_http_version 1.1;
    proxy_buffers 8 16k;
    proxy_buffer_size 32k;


    proxy_hide_header Vary;
    proxy_set_header Accept-Encoding ' ';
    proxy_connect_timeout 5s;
    proxy_send_timeout 2m;
    proxy_read_timeout 2m;

    proxy_ignore_client_abort off;
    proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504 ;
    charset off;

    lua_package_path '/luaScriptPath/?.lua;;';
    lua_package_cpath '/luaLibPath/?.so;;';

    server {
        listen 8080;
        server_name "";

        location / {
            #Return some string to fix LVS nanny's error: READ from x.x.x.x:80 was too short.
            access_log   off;
            return 200 "No such virtual host!";
        }
    }

    server {
        listen 8080;
        server_name server1.com;

        access_log   logs/access.log main;
        error_log    logs/error.log  error;

        location / {
            default_type 'text/html';
            return 200 'No such virtual host!';
        }

        # 测试接口
        location ~ ^/api/test/param1/(.*)/param2/(.*) {
            default_type 'application/json;charset=utf-8';
            content_by_lua '
                local app = require("Application")
                app:run()
            ';
        }
    }
}